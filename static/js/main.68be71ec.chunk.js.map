{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","ContactsList","contacts","onDeleteContactBtnClick","style","contactsList","map","id","name","number","contactsListItem","type","onClick","ContactForm","state","onInputChange","e","setState","target","value","onFormSubmit","preventDefault","props","onSubmitData","reset","this","onSubmit","pattern","title","required","onChange","Component","Filter","onFilterChange","contactsFilterLabel","contactsFilterLabelText","contactsFilterInput","App","filter","addContact","contactsItem","uuidv4","duplicateContactName","find","contact","duplicateContactNumber","alert","getFilteredContacts","normalizedFilterValue","toLocaleLowerCase","trim","includes","deleteContact","contactId","prevState","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68be71ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsFilterInput\":\"Filter_contactsFilterInput__15nh6\",\"contactsFilterLabel\":\"Filter_contactsFilterLabel__pPK1F\",\"contactsFilterLabelText\":\"Filter_contactsFilterLabelText__3EE43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__KNBQ4\",\"contactsListItem\":\"ContactsList_contactsListItem__1jJ3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3hpN0\"};","import styles from \"../Container/Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nexport default Container;\n","import style from \"../ContactsList/ContactsList.module.css\";\n\nconst ContactsList = ({ contacts, onDeleteContactBtnClick }) => {\n  return (\n    <ul className={style.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.contactsListItem}>\n          <p>{name}: </p>\n          <p>{number}</p>\n          <button type=\"button\" onClick={() => onDeleteContactBtnClick(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport style from \"../ContactForm/ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  onInputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmitData(this.state.name, this.state.number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.onFormSubmit}>\n        <label>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я ]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов, не должно начинаться или оканчиваться пробелом. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.onInputChange}\n          />\n        </label>\n        <label>\n          <span>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки, и может начинаться с +, не должен начинаться или оканчиваться пробелом\"\n            required\n            value={number}\n            onChange={this.onInputChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import style from \"../Filter/Filter.module.css\";\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <label className={style.contactsFilterLabel}>\n      <span className={style.contactsFilterLabelText}>\n        Find contacts by name\n      </span>\n      <input\n        type=\"text\"\n        className={style.contactsFilterInput}\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./components/Container/Container\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  static propTypes = {};\n\n  addContact = (name, number) => {\n    const contactsItem = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    const duplicateContactName = contacts.find(\n      (contact) => contact.name === contactsItem.name\n    );\n    const duplicateContactNumber = contacts.find(\n      (contact) => contact.number === contactsItem.number\n    );\n\n    if (duplicateContactName) {\n      alert(`${contactsItem.name} is already in contacts!`);\n      return;\n    }\n    if (duplicateContactNumber) {\n      alert(\n        `${contactsItem.number} is already in contacts! (${duplicateContactNumber.name} has this number)`\n      );\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contactsItem, ...contacts],\n    }));\n  };\n\n  onFilterChange = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilterValue = filter.toLocaleLowerCase().trim();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilterValue)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitData={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter onFilterChange={this.onFilterChange} />\n        <ContactsList\n          contacts={filteredContacts}\n          onDeleteContactBtnClick={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}